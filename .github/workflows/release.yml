name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.3.0-beta)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Extract changelog
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}
          if grep -q "## $VERSION" Docs/CHANGELOG.md; then
            awk "/## $VERSION/,/## /{print}" Docs/CHANGELOG.md | sed '1d;$d' > release_notes.md
          else
            echo "Release $VERSION" > release_notes.md
            echo "" >> release_notes.md
            echo "See CHANGELOG.md for details." >> release_notes.md
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: backend
        env:
          DB_ENGINE: django.db.backends.sqlite3
          DB_NAME: ':memory:'
        run: pytest tests --cov=. --cov-report=xml --cov-fail-under=80

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: frontend
        run: npm run test:coverage

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Create release archive
        run: |
          mkdir -p release-artifacts
          tar -czf release-artifacts/fmu-sims-backend-${{ steps.version.outputs.version }}.tar.gz backend/
          tar -czf release-artifacts/fmu-sims-frontend-${{ steps.version.outputs.version }}.tar.gz frontend/dist/
          cp docker-compose.yml release-artifacts/
          cp .env.example release-artifacts/
          cp README.md release-artifacts/
          tar -czf release-artifacts/fmu-sims-${{ steps.version.outputs.version }}.tar.gz \
            docker-compose.yml .env.example README.md Docs/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'alpha') }}
          files: |
            release-artifacts/*.tar.gz
            release-artifacts/docker-compose.yml
            release-artifacts/.env.example
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Backend source archive" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend build archive" >> $GITHUB_STEP_SUMMARY
          echo "- Full release archive" >> $GITHUB_STEP_SUMMARY
          echo "- Docker Compose configuration" >> $GITHUB_STEP_SUMMARY
          echo "- Environment template" >> $GITHUB_STEP_SUMMARY
