name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install backend deps
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff black isort mypy pytest pytest-cov pip-audit

      - name: Lint (ruff)
        working-directory: ./backend
        run: ruff check .

      - name: Format check (black)
        working-directory: ./backend
        run: black --check .

      - name: Imports (isort)
        working-directory: ./backend
        run: isort --check-only .

      - name: Types (mypy)
        working-directory: ./backend
        run: mypy . || true  # loosen if strict types not ready

      - name: Security (pip-audit)
        working-directory: ./backend
        run: pip-audit || true  # fail-soft until deps are pinned

      - name: Tests + Coverage
        working-directory: ./backend
        run: |
          pytest --cov=. --cov-report=xml --cov-fail-under=80

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        working-directory: ./frontend
        run: |
          npm ci || npm install
      
      - name: Lint
        working-directory: ./frontend
        run: npm run lint || true

      - name: Unit tests
        working-directory: ./frontend
        run: npm run test -- --coverage || true

  security-codeql:
    uses: github/codeql-action/.github/workflows/codeql.yml@v3
    permissions:
      security-events: write
      actions: read
      contents: read
